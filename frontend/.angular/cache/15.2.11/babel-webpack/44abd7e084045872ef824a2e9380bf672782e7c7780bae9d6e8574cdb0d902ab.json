{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport { _ as r } from \"../chunks/tslib.es6.js\";\nimport { property as e } from \"../core/accessorSupport/decorators/property.js\";\nimport \"../core/accessorSupport/ensureType.js\";\nimport \"../core/arrayUtils.js\";\nimport \"../core/has.js\";\nimport { subclass as o } from \"../core/accessorSupport/decorators/subclass.js\";\nimport { owningCollectionProperty as s } from \"../core/support/OwningCollection.js\";\nimport t from \"./Layer.js\";\nimport { BlendLayer as i } from \"./mixins/BlendLayer.js\";\nimport { ScaleRangeLayer as p } from \"./mixins/ScaleRangeLayer.js\";\nimport { GraphicsCollection as a } from \"../support/GraphicsCollection.js\";\nimport c from \"../symbols/support/ElevationInfo.js\";\nlet n = class extends i(p(t)) {\n  constructor(r) {\n    super(r), this.elevationInfo = null, this.graphics = new a(), this.screenSizePerspectiveEnabled = !0, this.type = \"graphics\", this.internal = !1;\n  }\n  destroy() {\n    this.removeAll(), this.graphics.destroy();\n  }\n  add(r) {\n    return this.graphics.add(r), this;\n  }\n  addMany(r) {\n    return this.graphics.addMany(r), this;\n  }\n  removeAll() {\n    return this.graphics.removeAll(), this;\n  }\n  remove(r) {\n    this.graphics.remove(r);\n  }\n  removeMany(r) {\n    this.graphics.removeMany(r);\n  }\n  on(r, e) {\n    return super.on(r, e);\n  }\n  graphicChanged(r) {\n    this.emit(\"graphic-update\", r);\n  }\n};\nr([e({\n  type: c\n})], n.prototype, \"elevationInfo\", void 0), r([e(s(a, \"graphics\"))], n.prototype, \"graphics\", void 0), r([e({\n  type: [\"show\", \"hide\"]\n})], n.prototype, \"listMode\", void 0), r([e()], n.prototype, \"screenSizePerspectiveEnabled\", void 0), r([e({\n  readOnly: !0\n})], n.prototype, \"type\", void 0), r([e({\n  constructOnly: !0\n})], n.prototype, \"internal\", void 0), n = r([o(\"esri.layers.GraphicsLayer\")], n);\nconst h = n;\nexport { h as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}