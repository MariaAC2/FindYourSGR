{"ast":null,"code":"import _asyncToGenerator from \"/home/alex/FindYourSGR/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../chunks/tslib.es6.js\";\nimport \"../intl.js\";\nimport { eventKey as t } from \"../core/events.js\";\nimport { destroyMaybe as s, abortMaybe as r } from \"../core/maybe.js\";\nimport { watch as i, on as n, initial as o } from \"../core/reactiveUtils.js\";\nimport { escapeRegExpString as u } from \"../core/string.js\";\nimport { property as l } from \"../core/accessorSupport/decorators/property.js\";\nimport \"../core/accessorSupport/ensureType.js\";\nimport \"../core/arrayUtils.js\";\nimport \"../core/has.js\";\nimport { subclass as a } from \"../core/accessorSupport/decorators/subclass.js\";\nimport c from \"./Widget.js\";\nimport { css as d } from \"./Search/css.js\";\nimport h from \"./Search/SearchResultRenderer.js\";\nimport g from \"./Search/SearchViewModel.js\";\nimport { globalCss as p } from \"./support/globalCss.js\";\nimport { legacyIcon as _ } from \"./support/legacyIcon.js\";\nimport { storeNode as m, keepMenuItemWithinView as v, isActivationKey as M } from \"./support/widgetUtils.js\";\nimport { messageBundle as S } from \"./support/decorators/messageBundle.js\";\nimport { vmEvent as w } from \"./support/decorators/vmEvent.js\";\nimport { tsx as I } from \"./support/jsxFactory.js\";\nimport { substitute as b } from \"../intl/substitute.js\";\nconst y = /<[a-z/][\\s\\S]*>/i,\n  f = (e, t) => {\n    const s = u(t).split(/\\s/),\n      r = new RegExp(`(${s.join(\"|\")})`, \"gi\");\n    return e.replace(r, e => `<strong>${e}</strong>`);\n  };\nlet C = class extends c {\n  constructor(e, t) {\n    super(e, t), this._activeMenuItemIndex = -1, this._inputNode = null, this._menuItemCount = 0, this._sourceMenuButtonNode = null, this._sourceListNode = null, this._suggestionListNode = null, this._searchResultRenderer = new h(), this._suggestController = null, this._searchController = null, this._locateFailed = !1, this._container = null, this.activeMenu = \"none\", this.disabled = !1, this.iconClass = d.widgetIcon, this.icon = null, this.messages = null, this.messagesCommon = null, this.viewModel = new g(), this._clearActiveMenu = () => {\n      this.activeMenu = \"none\";\n    }, this._removeActiveMenu = e => {\n      const t = e.relatedTarget;\n      t && this._container?.contains(t) || this._clearActiveMenu();\n    }, this.addHandles([i(() => this.searchTerm, e => {\n      (e && \"warning\" === this.activeMenu || !e && !this.viewModel?.selectedSuggestion?.location) && this._clearActiveMenu();\n    }), n(() => this.viewModel?.allSources, \"change\", () => this._watchSourceChanges()), i(() => this.activeMenu, () => this._resetActiveMenuItemIndex(), o), i(() => this.viewModel?.defaultPopupTemplate, e => {\n      e && (e.content = this._renderSearchResultsContent.bind(this));\n    }, o)]);\n  }\n  destroy() {\n    this._cancelSuggest(), this._cancelSearch(), this._searchResultRenderer = s(this._searchResultRenderer);\n  }\n  get displayedSearchTerm() {\n    return `${this.viewModel.searchTerm}`.trim();\n  }\n  get inputId() {\n    return this._buildId(\"input\");\n  }\n  get suggestionsMenuId() {\n    return this._buildId(\"suggest-menu\");\n  }\n  get sourceMenuId() {\n    return this._buildId(\"source-menu\");\n  }\n  get sourceMenuButtonId() {\n    return this._buildId(\"source-menu-button\");\n  }\n  get activeSource() {\n    return this.viewModel?.activeSource;\n  }\n  get activeSourceIndex() {\n    return this.viewModel.activeSourceIndex;\n  }\n  set activeSourceIndex(e) {\n    this.viewModel.activeSourceIndex = e;\n  }\n  get allPlaceholder() {\n    return this.viewModel.allPlaceholder;\n  }\n  set allPlaceholder(e) {\n    this.viewModel.allPlaceholder = e;\n  }\n  get allSources() {\n    return this.viewModel.allSources;\n  }\n  get autoNavigate() {\n    return this.viewModel.autoNavigate;\n  }\n  set autoNavigate(e) {\n    this.viewModel.autoNavigate = e;\n  }\n  get autoSelect() {\n    return this.viewModel.autoSelect;\n  }\n  set autoSelect(e) {\n    this.viewModel.autoSelect = e;\n  }\n  get defaultSources() {\n    return this.viewModel.defaultSources;\n  }\n  get goToOverride() {\n    return this.viewModel.goToOverride;\n  }\n  set goToOverride(e) {\n    this.viewModel.goToOverride = e;\n  }\n  get includeDefaultSources() {\n    return this.viewModel.includeDefaultSources;\n  }\n  set includeDefaultSources(e) {\n    this.viewModel.includeDefaultSources = e;\n  }\n  get label() {\n    return this.messages?.widgetLabel ?? \"\";\n  }\n  set label(e) {\n    this._overrideIfSome(\"label\", e);\n  }\n  get locationEnabled() {\n    return this.viewModel.locationEnabled;\n  }\n  set locationEnabled(e) {\n    this.viewModel.locationEnabled = e;\n  }\n  get maxResults() {\n    return this.viewModel.maxResults;\n  }\n  set maxResults(e) {\n    this.viewModel.maxResults = e;\n  }\n  get maxSuggestions() {\n    return this.viewModel.maxSuggestions;\n  }\n  set maxSuggestions(e) {\n    this.viewModel.maxSuggestions = e;\n  }\n  get minSuggestCharacters() {\n    return this.viewModel.minSuggestCharacters;\n  }\n  set minSuggestCharacters(e) {\n    this.viewModel.minSuggestCharacters = e;\n  }\n  get popupEnabled() {\n    return this.viewModel.popupEnabled;\n  }\n  set popupEnabled(e) {\n    this.viewModel.popupEnabled = e;\n  }\n  get popupTemplate() {\n    return this.viewModel.popupTemplate;\n  }\n  set popupTemplate(e) {\n    this.viewModel.popupTemplate = e;\n  }\n  get portal() {\n    return this.viewModel?.portal;\n  }\n  set portal(e) {\n    this.viewModel && (this.viewModel.portal = e);\n  }\n  get resultGraphic() {\n    return this.viewModel.resultGraphic;\n  }\n  set resultGraphic(e) {\n    this.viewModel.resultGraphic = e;\n  }\n  get resultGraphicEnabled() {\n    return this.viewModel.resultGraphicEnabled;\n  }\n  set resultGraphicEnabled(e) {\n    this.viewModel.resultGraphicEnabled = e;\n  }\n  get results() {\n    return this.viewModel.results;\n  }\n  get searchAllEnabled() {\n    return this.viewModel.searchAllEnabled;\n  }\n  set searchAllEnabled(e) {\n    this.viewModel.searchAllEnabled = e;\n  }\n  get searchTerm() {\n    return this.viewModel.searchTerm;\n  }\n  set searchTerm(e) {\n    this.viewModel.searchTerm = e;\n  }\n  get selectedResult() {\n    return this.viewModel.selectedResult;\n  }\n  get sources() {\n    return this.viewModel.sources;\n  }\n  set sources(e) {\n    this.viewModel.sources = e;\n  }\n  get suggestions() {\n    return this.viewModel.suggestions;\n  }\n  get suggestionsEnabled() {\n    return this.viewModel.suggestionsEnabled;\n  }\n  set suggestionsEnabled(e) {\n    this.viewModel.suggestionsEnabled = e;\n  }\n  get view() {\n    return this.viewModel.view;\n  }\n  set view(e) {\n    this.viewModel.view = e;\n  }\n  clear() {\n    this.viewModel.clear();\n  }\n  focus() {\n    this._inputNode?.focus(), this.emit(\"search-focus\");\n  }\n  blur() {\n    this._inputNode?.blur(), this.emit(\"search-blur\");\n  }\n  search(e) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this._clearActiveMenu(), _this._cancelSuggest(), _this._cancelSearch();\n      const t = new AbortController(),\n        {\n          signal: s\n        } = t;\n      _this._searchController = t;\n      try {\n        const r = yield _this.viewModel.search(e, {\n          signal: s\n        });\n        if (_this._searchController !== t) return;\n        return _this.activeMenu = r?.numResults ? \"none\" : \"warning\", _this._searchController = null, r;\n      } catch (r) {\n        if (_this._searchController !== t) return;\n        return _this._clearActiveMenu(), void (_this._searchController = null);\n      }\n    })();\n  }\n  suggest(e) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2._cancelSuggest();\n      const t = new AbortController(),\n        {\n          signal: s\n        } = t;\n      _this2._suggestController = t;\n      try {\n        const r = yield _this2.viewModel.suggest(e, null, {\n          signal: s\n        });\n        if (_this2._suggestController !== t) return;\n        return _this2._suggestController = null, r?.numResults && _this2._openSuggestionMenu(), _this2._scrollToTopSuggestion(), r;\n      } catch (r) {\n        return _this2._suggestController !== t || (_this2._suggestController = null), null;\n      }\n    })();\n  }\n  render() {\n    const {\n        state: e\n      } = this.viewModel,\n      t = {\n        [p.disabled]: \"disabled\" === e,\n        [p.widgetDisabled]: this.disabled\n      };\n    return I(\"div\", {\n      class: this.classes(d.base, p.widget, t)\n    }, \"loading\" === e ? this._renderLoader() : this._renderContainer());\n  }\n  _renderSubmitButton() {\n    const {\n      messages: e,\n      disabled: t\n    } = this;\n    return I(\"button\", {\n      \"aria-label\": e.searchButtonTitle,\n      bind: this,\n      class: this.classes(d.submitButton, p.widgetButton),\n      disabled: t,\n      key: \"esri-search__submit-button\",\n      onclick: this._handleSearchButtonClick,\n      title: e.searchButtonTitle,\n      type: \"button\"\n    }, I(\"span\", {\n      \"aria-hidden\": \"true\",\n      class: _.search\n    }));\n  }\n  _renderWarningMenu() {\n    return I(\"div\", {\n      class: this.classes(p.menu, d.warningMenu),\n      key: \"esri-search__error-menu\"\n    }, I(\"div\", {\n      class: d.warningMenuBody\n    }, this._renderWarning()));\n  }\n  _renderSourceMenuButton() {\n    const {\n        messages: e,\n        activeMenu: t,\n        sourceMenuId: s,\n        sourceMenuButtonId: r,\n        disabled: i\n      } = this,\n      {\n        activeSourceIndex: n,\n        allSources: o\n      } = this.viewModel;\n    return o.length > 1 ? I(\"button\", {\n      afterCreate: m,\n      \"aria-controls\": s,\n      \"aria-expanded\": (\"source\" === t).toString(),\n      \"aria-haspopup\": \"true\",\n      \"aria-label\": e.searchIn,\n      bind: this,\n      class: this.classes(d.sourcesButton, p.widgetButton),\n      \"data-node-ref\": \"_sourceMenuButtonNode\",\n      disabled: i,\n      id: r,\n      key: \"esri-search__source-menu-button\",\n      onclick: this._handleSourcesMenuToggleClick,\n      onfocus: this._handleSourcesMenuToggleFocus,\n      title: e.searchIn,\n      type: \"button\"\n    }, I(\"span\", {\n      \"aria-hidden\": \"true\",\n      class: this.classes(_.downArrow, d.sourcesButtonDown)\n    }), I(\"span\", {\n      \"aria-hidden\": \"true\",\n      class: this.classes(_.upArrow, d.sourcesButtonUp)\n    }), I(\"span\", {\n      class: d.sourceName\n    }, this._getSourceName(n))) : null;\n  }\n  _renderSourcesList() {\n    const {\n        allSources: e,\n        searchAllEnabled: t\n      } = this.viewModel,\n      {\n        _activeMenuItemIndex: s,\n        activeMenu: r,\n        sourceMenuId: i,\n        sourceMenuButtonId: n\n      } = this,\n      o = \"source\" === r && s > -1 ? this._buildId(\"source-item\", s) : null;\n    return e.length > 1 ? I(\"ul\", {\n      afterCreate: m,\n      \"aria-activedescendant\": o,\n      \"aria-labelledby\": n,\n      bind: this,\n      class: p.menuList,\n      \"data-node-ref\": \"_sourceListNode\",\n      id: i,\n      onkeydown: this._handleSourceMenuKeydown,\n      onkeyup: this._handleSourceMenuKeyup,\n      role: \"menu\",\n      tabIndex: -1\n    }, t ? this._renderSource(g.ALL_INDEX) : null, e.map((e, t) => this._renderSource(t)).toArray()) : null;\n  }\n  _renderSourcesMenu() {\n    const {\n      allSources: e\n    } = this.viewModel;\n    return e.length > 1 ? I(\"div\", {\n      class: this.classes(p.menu, d.sourcesMenu),\n      key: \"esri-search__source-menu\"\n    }, this._renderSourcesList()) : null;\n  }\n  _renderLoader() {\n    const {\n      messages: e,\n      messagesCommon: t,\n      disabled: s\n    } = this;\n    return I(\"div\", {\n      class: p.loader,\n      key: \"base-loader\",\n      tabIndex: s ? -1 : void 0\n    }, I(\"span\", {\n      \"aria-hidden\": \"true\",\n      class: p.loaderAnimation\n    }), I(\"span\", {\n      class: _.fontFallbackText\n    }, e.searchButtonTitle), I(\"span\", {\n      class: p.loaderText\n    }, t.loading));\n  }\n  _renderContainer() {\n    const {\n        allSources: e,\n        state: t\n      } = this.viewModel,\n      {\n        activeMenu: s\n      } = this,\n      r = {\n        [d.hasMultipleSources]: e.length > 1,\n        [d.isLoading]: \"loading\" === t,\n        [d.isSearching]: \"searching\" === t,\n        [d.showWarning]: \"warning\" === s,\n        [d.showSources]: \"source\" === s,\n        [d.showSuggestions]: \"suggestion\" === s\n      };\n    return I(\"div\", {\n      afterCreate: e => {\n        this._container = e, e.addEventListener(\"focusout\", this._removeActiveMenu);\n      },\n      afterRemoved: e => {\n        e.removeEventListener(\"focusout\", this._removeActiveMenu);\n      },\n      class: this.classes(r, d.container),\n      key: \"base-container\",\n      tabIndex: -1\n    }, this._renderSourceMenuButton(), this._renderSourcesMenu(), this._renderInputContainer(), this._renderSubmitButton(), this._renderWarningMenu());\n  }\n  _renderClearButton() {\n    return this.searchTerm ? I(\"button\", {\n      bind: this,\n      class: this.classes(d.clearButton, p.widgetButton),\n      disabled: this.disabled,\n      key: \"esri-search__clear-button\",\n      onclick: this._handleClearButtonClick,\n      onfocus: this._clearActiveMenu,\n      title: this.messages.clearButtonTitle,\n      type: \"button\"\n    }, I(\"span\", {\n      \"aria-hidden\": \"true\",\n      class: _.close\n    })) : null;\n  }\n  _renderLocationGroup() {\n    const {\n        messages: e,\n        locationEnabled: t,\n        displayedSearchTerm: s\n      } = this,\n      r = t && !s,\n      i = \"suggestion\" === this.activeMenu && 0 === this._activeMenuItemIndex;\n    return r ? I(\"ul\", {\n      class: this.classes(p.menuList, d.suggestionList, d.suggestionListCurrentLocation),\n      key: \"esri-search__suggestion-list-current-location\",\n      role: \"group\"\n    }, I(\"li\", {\n      \"aria-selected\": (\"suggestion\" === this.activeMenu && 0 === this._activeMenuItemIndex).toString(),\n      bind: this,\n      class: this.classes(p.menuItem, i ? p.menuItemFocus : null),\n      \"data-current-location-item\": !0,\n      id: this._buildId(\"suggestion-item\", 0),\n      onclick: this._handleUseCurrentLocationClick,\n      role: \"option\"\n    }, I(\"span\", {\n      \"aria-hidden\": \"true\",\n      class: _.locateCircled\n    }), \" \", e.useCurrentLocation)) : null;\n  }\n  _renderInput() {\n    const {\n        activeMenu: e,\n        locationEnabled: t,\n        displayedSearchTerm: s,\n        messages: r,\n        suggestionsMenuId: i,\n        inputId: n,\n        _activeMenuItemIndex: o,\n        disabled: u\n      } = this,\n      {\n        maxInputLength: l,\n        placeholder: a,\n        searchTerm: c,\n        suggestionCount: h\n      } = this.viewModel,\n      g = !(!(t && !s) && !h),\n      _ = \"suggestion\" === e && o > -1 ? this._buildId(\"suggestion-item\", o) : null;\n    return I(\"input\", {\n      afterCreate: m,\n      \"aria-activedescendant\": _,\n      \"aria-autocomplete\": \"list\",\n      \"aria-controls\": g ? i : null,\n      \"aria-expanded\": (g && \"suggestion\" === e).toString(),\n      \"aria-haspopup\": \"listbox\",\n      \"aria-label\": r.searchButtonTitle,\n      autocomplete: \"off\",\n      bind: this,\n      class: this.classes(p.input, d.input),\n      \"data-node-ref\": \"_inputNode\",\n      disabled: u,\n      id: n,\n      maxlength: l,\n      onblur: this.blur,\n      onclick: this._openSuggestionMenu,\n      onfocus: this.focus,\n      oninput: this._handleInputPaste,\n      onkeyup: this._handleInputKeyup,\n      onpaste: this._handleInputPaste,\n      placeholder: a,\n      role: \"combobox\",\n      title: c ? \"\" : a,\n      type: \"text\",\n      value: c\n    });\n  }\n  _renderForm() {\n    return I(\"form\", {\n      bind: this,\n      class: d.form,\n      disabled: this.disabled,\n      key: \"esri-search__form\",\n      onsubmit: this._formSubmit,\n      role: \"search\"\n    }, this._renderInput());\n  }\n  _renderSuggestList(e) {\n    const {\n        sourceIndex: t\n      } = e,\n      {\n        results: s\n      } = e,\n      r = s?.length;\n    return r ? I(\"ul\", {\n      class: this.classes(p.menuList, d.suggestionList),\n      key: `esri-search__suggestion-list-${t}`,\n      role: \"group\"\n    }, s?.map(e => this._renderSuggestion(e, this._menuItemCount++))) : null;\n  }\n  _renderSuggestionsGroup() {\n    const {\n      suggestions: e\n    } = this.viewModel;\n    return e ? e.map(e => [this._renderSuggestionHeader(e), this._renderSuggestList(e)]) : [];\n  }\n  _renderSuggestionsMenu() {\n    const {\n        displayedSearchTerm: e,\n        locationEnabled: t,\n        suggestionsMenuId: s,\n        inputId: r\n      } = this,\n      {\n        suggestionCount: i\n      } = this.viewModel,\n      n = t && !e || i;\n    return this._menuItemCount = 0, n ? I(\"div\", {\n      afterCreate: m,\n      \"aria-labelledby\": r,\n      bind: this,\n      class: this.classes(p.menu, d.suggestionsMenu),\n      \"data-node-ref\": \"_suggestionListNode\",\n      id: s,\n      key: \"esri-search__suggestions-menu\",\n      role: \"listbox\"\n    }, this._renderLocationGroup(), this._renderSuggestionsGroup()) : null;\n  }\n  _renderInputContainer() {\n    return I(\"div\", {\n      class: d.inputContainer,\n      key: \"esri-search__input-container\"\n    }, this._renderForm(), this._renderSuggestionsMenu(), this._renderClearButton());\n  }\n  _renderSuggestionHeader(e) {\n    const {\n        allSources: t,\n        activeSourceIndex: s\n      } = this.viewModel,\n      {\n        sourceIndex: r\n      } = e,\n      i = e.results?.length,\n      n = t.length > 1 && s === g.ALL_INDEX;\n    return i && n ? I(\"div\", {\n      class: p.menuHeader,\n      key: `esri-search__suggestion-header-${r}`\n    }, this._getSourceName(r)) : null;\n  }\n  _renderSuggestion(e, t) {\n    const {\n      _activeMenuItemIndex: s,\n      viewModel: {\n        searchTerm: r\n      }\n    } = this;\n    if (!r) return;\n    const i = \"suggestion\" === this.activeMenu && s === t;\n    return I(\"li\", {\n      \"aria-selected\": (\"suggestion\" === this.activeMenu && this._activeMenuItemIndex === t).toString(),\n      bind: this,\n      class: this.classes(p.menuItem, i ? p.menuItemFocus : null),\n      \"data-suggestion\": e,\n      id: this._buildId(\"suggestion-item\", t),\n      innerHTML: this._getSuggestResultHTML(e.text, r),\n      key: `esri-search__suggestion_${t}`,\n      onclick: this._handleSuggestionClick,\n      role: \"option\"\n    });\n  }\n  _renderSource(e) {\n    const {\n        activeSourceIndex: t,\n        searchAllEnabled: s\n      } = this.viewModel,\n      r = {\n        [p.menuItemActive]: e === t,\n        [p.menuItemFocus]: \"source\" === this.activeMenu && e === (s ? this._activeMenuItemIndex - 1 : this._activeMenuItemIndex)\n      },\n      i = s ? e + 1 : e;\n    return I(\"li\", {\n      \"aria-checked\": (e === t).toString(),\n      bind: this,\n      class: this.classes(d.source, p.menuItem, r),\n      \"data-source-index\": e,\n      id: this._buildId(\"source-item\", i),\n      key: `esri-search__source-${e}`,\n      onclick: this._handleSourceClick,\n      role: \"menuitemradio\"\n    }, this._getSourceName(e));\n  }\n  _renderNoResultsWarning(e) {\n    const {\n        messages: t\n      } = this,\n      s = e ? b(t.noResultsFoundForValue, {\n        value: `\"${e}\"`\n      }) : t.noResultsFound;\n    return I(\"div\", {\n      key: \"esri-search__no_results\"\n    }, I(\"div\", {\n      class: d.warningMenuHeader\n    }, t.noResults), I(\"div\", {\n      class: d.warningMenuText\n    }, s));\n  }\n  _renderEmptySearchWarning() {\n    const {\n      messages: e\n    } = this;\n    return I(\"div\", {\n      key: \"esri-search__empty-search\"\n    }, I(\"span\", {\n      \"aria-hidden\": \"true\",\n      class: _.noticeTriangle\n    }), I(\"span\", {\n      class: d.noValueText\n    }, e.emptyValue));\n  }\n  _renderLocateWarning() {\n    const {\n      messages: e\n    } = this;\n    return I(\"div\", {\n      key: \"esri-search__locate-error\"\n    }, I(\"span\", {\n      \"aria-hidden\": \"true\",\n      class: _.noticeTriangle\n    }), I(\"span\", {\n      class: d.noValueText\n    }, e.locateError));\n  }\n  _renderWarning() {\n    const {\n        displayedSearchTerm: e,\n        _locateFailed: t\n      } = this,\n      {\n        viewModel: s\n      } = this;\n    return t ? this._renderLocateWarning() : s.selectedSuggestion?.location || e ? this._renderNoResultsWarning(e) : this._renderEmptySearchWarning();\n  }\n  _resetActiveMenuItemIndex() {\n    this._activeMenuItemIndex = -1;\n  }\n  _buildId(e, t) {\n    return `${this.id}-${e}${void 0 === t ? \"\" : `-${t}`}`;\n  }\n  _watchSourceChanges() {\n    const {\n        viewModel: {\n          allSources: e\n        }\n      } = this,\n      t = \"sources\";\n    this.removeHandles(t), e.forEach(e => this.addHandles(i(() => e.name, () => this.scheduleRender()), t));\n  }\n  _handleSourcesMenuToggleFocus() {\n    \"source\" !== this.activeMenu && this._clearActiveMenu();\n  }\n  _handleSourcesMenuToggleClick() {\n    const e = \"source\" === this.activeMenu;\n    this.activeMenu = e ? \"none\" : \"source\", this.renderNow(), \"source\" === this.activeMenu && this._sourceListNode?.focus();\n  }\n  _handleClearButtonClick() {\n    this.viewModel.clear(), this._focus();\n  }\n  _handleSearchButtonClick() {\n    this.search();\n  }\n  _handleSuggestionClick(e) {\n    const t = x(e.currentTarget);\n    t && (this._focus(), this.search(t));\n  }\n  _handleUseCurrentLocationClick() {\n    this._useCurrentLocation();\n  }\n  _useCurrentLocation() {\n    var _this3 = this;\n    this._focus(\"none\"), this._cancelSuggest(), this._cancelSearch();\n    const e = new AbortController(),\n      {\n        signal: t\n      } = e;\n    this._searchController = e;\n    _asyncToGenerator(function* () {\n      try {\n        const e = yield _this3.viewModel.searchNearby({\n          signal: t\n        });\n        _this3.activeMenu = e?.numResults ? \"none\" : \"warning\";\n      } catch (e) {\n        _this3._locateFailed = !0, _this3.activeMenu = \"warning\";\n      } finally {\n        _this3._searchController = null;\n      }\n    })();\n  }\n  _handleSourceClick(e) {\n    this._setSourceFromMenuItem(e.currentTarget);\n  }\n  _setSourceFromMenuItem(e) {\n    if (!e) return;\n    const t = T(e);\n    null != t && (this.viewModel.activeSourceIndex = t, this._clearActiveMenu(), this._sourceMenuButtonNode?.focus());\n  }\n  _cancelSuggest() {\n    this._suggestController = r(this._suggestController);\n  }\n  _cancelSearch() {\n    this._searchController = r(this._searchController), this._locateFailed = !1;\n  }\n  _handleInputKeyup(e) {\n    const s = t(e);\n    if (e.ctrlKey || e.metaKey || \"Copy\" === s || \"ArrowLeft\" === s || \"ArrowRight\" === s || \"Shift\" === s) return;\n    if (\"Tab\" === s || \"Escape\" === s || e.shiftKey && \"Tab\" === s) return this._cancelSuggest(), void (\"Escape\" === s && this._clearActiveMenu());\n    const r = \"Home\" === s || \"End\" === s || \"ArrowUp\" === s || \"ArrowDown\" === s;\n    if (\"Enter\" === s && this._activeMenuItemIndex < 0) return void this._cancelSuggest();\n    const i = this._suggestionListNode?.getElementsByTagName(\"li\");\n    if (i?.length) {\n      if (\"suggestion\" !== this.activeMenu && this._openSuggestionMenu(), r) return e.preventDefault(), this._cancelSuggest(), void this._handleItemNavigation(s, i, this._suggestionListNode);\n      const t = i[this._activeMenuItemIndex];\n      if (\"Enter\" === s && t) {\n        const e = x(t);\n        return void (e ? (this._focus(), this.search(e)) : E(t) && this._useCurrentLocation());\n      }\n    }\n    this.viewModel.searchTerm && this.suggest();\n  }\n  _handleItemNavigation(e, t, s) {\n    const r = this._activeMenuItemIndex;\n    \"Home\" === e && (this._activeMenuItemIndex = 0), \"End\" === e && (this._activeMenuItemIndex = t.length - 1), \"ArrowUp\" === e && (this._activeMenuItemIndex = this._activeMenuItemIndex <= 0 ? t.length - 1 : this._activeMenuItemIndex - 1), \"ArrowDown\" === e && (this._activeMenuItemIndex = this._activeMenuItemIndex === t.length - 1 ? 0 : this._activeMenuItemIndex + 1), r !== this._activeMenuItemIndex && s && v(t[this._activeMenuItemIndex], s);\n  }\n  _scrollToTopSuggestion() {\n    this._suggestionListNode && (this._suggestionListNode.scrollTop = 0);\n  }\n  _openSuggestionMenu() {\n    this.activeMenu = \"suggestion\";\n  }\n  _handleInputPaste(e) {\n    const t = e.target;\n    this.viewModel.searchTerm !== t.value && (this.viewModel.searchTerm = t.value), this.viewModel.searchTerm && this.suggest();\n  }\n  _handleSourceMenuKeydown(e) {\n    const s = t(e);\n    if (M(s)) {\n      e.preventDefault();\n      const t = this._sourceListNode?.getElementsByTagName(\"li\"),\n        s = t?.[this._activeMenuItemIndex];\n      this._setSourceFromMenuItem(s);\n    } else \"ArrowUp\" !== s && \"ArrowDown\" !== s && \"End\" !== s && \"Home\" !== s || e.preventDefault();\n  }\n  _handleSourceMenuKeyup(e) {\n    const s = t(e),\n      r = \"ArrowUp\" === s || \"ArrowDown\" === s || \"End\" === s || \"Home\" === s;\n    if (r && e.preventDefault(), \"Escape\" === s) return this._clearActiveMenu(), void this._sourceMenuButtonNode?.focus();\n    const i = this._sourceListNode?.getElementsByTagName(\"li\");\n    return i && 0 !== i.length && r ? (\"source\" !== this.activeMenu && (this.activeMenu = \"source\"), void this._handleItemNavigation(s, i, this._sourceListNode?.parentElement)) : void 0;\n  }\n  _focus(e) {\n    this.focus(), e && (this.activeMenu = e);\n  }\n  _formSubmit(e) {\n    e.preventDefault(), -1 === this._activeMenuItemIndex && this.search();\n  }\n  _getSourceName(e) {\n    const {\n        messages: t\n      } = this,\n      s = this.viewModel,\n      {\n        allSources: r\n      } = s,\n      i = r.at(e);\n    return e === g.ALL_INDEX ? t.all : i && i.name || t.untitledSource;\n  }\n  _getSuggestResultHTML(e, t) {\n    return e ? y.test(e) ? e : f(e, t) : this.messages.untitledResult;\n  }\n  _renderSearchResultsContent() {\n    return this._searchResultRenderer.showMoreResultsOpen = !1, this._searchResultRenderer.viewModel = this.viewModel, this._searchResultRenderer;\n  }\n};\nfunction x(e) {\n  return e?.[\"data-suggestion\"];\n}\nfunction T(e) {\n  return e?.[\"data-source-index\"];\n}\nfunction E(e) {\n  return !!e?.[\"data-current-location-item\"];\n}\ne([l()], C.prototype, \"_activeMenuItemIndex\", void 0), e([l()], C.prototype, \"displayedSearchTerm\", null), e([l({\n  readOnly: !0\n})], C.prototype, \"inputId\", null), e([l({\n  readOnly: !0\n})], C.prototype, \"suggestionsMenuId\", null), e([l({\n  readOnly: !0\n})], C.prototype, \"sourceMenuId\", null), e([l({\n  readOnly: !0\n})], C.prototype, \"sourceMenuButtonId\", null), e([l()], C.prototype, \"activeMenu\", void 0), e([l({\n  readOnly: !0\n})], C.prototype, \"activeSource\", null), e([l()], C.prototype, \"activeSourceIndex\", null), e([l()], C.prototype, \"allPlaceholder\", null), e([l({\n  readOnly: !0\n})], C.prototype, \"allSources\", null), e([l()], C.prototype, \"autoNavigate\", null), e([l()], C.prototype, \"autoSelect\", null), e([l({\n  readOnly: !0\n})], C.prototype, \"defaultSources\", null), e([l()], C.prototype, \"disabled\", void 0), e([l()], C.prototype, \"goToOverride\", null), e([l()], C.prototype, \"iconClass\", void 0), e([l()], C.prototype, \"icon\", void 0), e([l()], C.prototype, \"includeDefaultSources\", null), e([l()], C.prototype, \"label\", null), e([l()], C.prototype, \"locationEnabled\", null), e([l()], C.prototype, \"maxResults\", null), e([l()], C.prototype, \"maxSuggestions\", null), e([l(), S(\"esri/widgets/Search/t9n/Search\")], C.prototype, \"messages\", void 0), e([l(), S(\"esri/t9n/common\")], C.prototype, \"messagesCommon\", void 0), e([l()], C.prototype, \"minSuggestCharacters\", null), e([l()], C.prototype, \"popupEnabled\", null), e([l()], C.prototype, \"popupTemplate\", null), e([l()], C.prototype, \"portal\", null), e([l()], C.prototype, \"resultGraphic\", null), e([l()], C.prototype, \"resultGraphicEnabled\", null), e([l({\n  readOnly: !0\n})], C.prototype, \"results\", null), e([l()], C.prototype, \"searchAllEnabled\", null), e([l()], C.prototype, \"searchTerm\", null), e([l({\n  readOnly: !0\n})], C.prototype, \"selectedResult\", null), e([l()], C.prototype, \"sources\", null), e([l({\n  readOnly: !0\n})], C.prototype, \"suggestions\", null), e([l()], C.prototype, \"suggestionsEnabled\", null), e([l()], C.prototype, \"view\", null), e([w([\"search-complete\", \"search-clear\", \"search-start\", \"select-result\", \"suggest-start\", \"suggest-complete\"]), l({\n  type: g\n})], C.prototype, \"viewModel\", void 0), C = e([a(\"esri.widgets.Search\")], C);\nconst L = C;\nexport { L as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}